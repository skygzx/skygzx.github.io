<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于生产中tail -f和tail -F的坑]]></title>
    <url>%2F2019%2F04%2F05%2F%E5%85%B3%E4%BA%8E%E7%94%9F%E4%BA%A7%E4%B8%ADtail%20-f%E5%92%8Ctail%20-F%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"><![CDATA[大家可能都知道，tail -f 和tail -F都是用来进行实时监控的那么这两者之间有什么区别呢？ tail -F=tail-f +retry表示：当tail -F去监控一个文件时，如果将这个文件删掉，但是之后又创建出来，那么tail -F还会继续监控，但是tail-f就不一样，删除掉这个文件后，再创建出来时，它不会再去监控这个文件。 $ tail –help-f, –follow[={name|descriptor}]​ output appended data as the file grows;​ -f, –follow, and –follow=descriptor are​ equivalent-F same as –follow=name –retry 而我们的log日志，是每达到200M，是要重新重命名的，比如加上序号1.，然后重新创建这个日志。所以在tail 一个log文件的时候, 文件滚动之后这个tail -f命令,就失效了.-F 是–follow=name –retry的缩写, –follow=name是按照文件名跟踪文件, 可以定期去重新打开文件检查文件是否被其它程序删除并重新建立. –retry这个参数, 保证文件重新建立后,可以继续被跟踪 详细可以查看网址：http://blog.itpub.net/30089851/viewspace-2134067/]]></content>
      <tags>
        <tag>大数据</tag>
        <tag>Linux系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[作业调度 crontab -e和crontab -l]]></title>
    <url>%2F2019%2F04%2F05%2F%E4%BD%9C%E4%B8%9A%E8%B0%83%E5%BA%A6%20crontab%20-e%E5%92%8Ccrontab%20-l%2F</url>
    <content type="text"><![CDATA[作业调度： 12345678910111213141516171819202122232425262728293031 crontab -e:(edit user's crontab)编辑crontab -l:(list user's crontab)查看先编写一个脚本test.sh，内容为 date；[root@hadoop001 ~]# crontab -e * * * * * /root/test.sh &gt;&gt; /root/test.log格式:* * * * * *第1个: 分第2个: 小时第3个: 日第4个: 月第5个: 周*代表 每用tail -F 来事实查看 test.log文件，发现每个1分钟就会输出日期。如果是每10秒？编写脚本:[root@hadoop001 ~]# vi test.sh( #!/bin/bashfor((i=1;i&lt;=6;i++));do date sleep 10sdoneexit )可以通过 tail -F test.log来时刻查看调度情况，会发现每隔10秒就会输出日期。如果想定时一个脚本，在凌晨2点钟运行，该怎么做呢？crontab -e 进入编辑：0 2 * * * /root/test.sh &gt;&gt; /root/test.log]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>大数据</tag>
        <tag>Linux系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sql面试题]]></title>
    <url>%2F2019%2F04%2F05%2Fsql%E9%9D%A2%E8%AF%95%E9%A2%98%2F</url>
    <content type="text"><![CDATA[面试题：一.哪些部门的薪水最高两位的工种有哪些？（分组取前几位） 1.每个部门每个工种的薪水和123456789select * from emp;create view sal as selectdeptno,job,sum(sal+ifnull(comm,0)) as salfrom emp group by deptno,job;select * from sal; 2.从1结果集 找出哪些部门的工种薪水和最高的前2位工种是什么？12345678910111213141516171819202122232425262728293031select a.*from sal a where (select count(*) from sal b where a.deptno=b.deptno and a.sal&gt;b.sal ) #假设取薪水和最高的每个部门的哪个工种?select * from sal;insert into emp values (1000, 'BOSS', 'BOSS', NULL, '1981-06-09', 9000, null, 10);#取top 1select a.* from sal awhere (select count(*) from sal b where a.deptno=b.deptno and a.sal&lt;b.sal) = 0order by a.deptno;select a.* from sal awhere (select count(*) from sal b where a.deptno=b.deptno and a.sal&lt;b.sal) &lt;= 1 order by a.deptno asc ,a.sal desc;]]></content>
      <categories>
        <category>面试题</category>
      </categories>
      <tags>
        <tag>面试题</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql查询语法]]></title>
    <url>%2F2019%2F04%2F05%2Fmysql%E4%B8%AD%E7%9A%84%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[创建三个表并添加数据： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061--部门表dept部门表(deptno部门编号/dname部门名称/loc地点)create table dept ( deptno numeric(2), dname varchar(14), loc varchar(13));insert into dept values (10, &apos;ACCOUNTING&apos;, &apos;NEW YORK&apos;);insert into dept values (20, &apos;RESEARCH&apos;, &apos;DALLAS&apos;);insert into dept values (30, &apos;SALES&apos;, &apos;CHICAGO&apos;);insert into dept values (40, &apos;OPERATIONS&apos;, &apos;BOSTON&apos;);--工资等级表salgrade工资等级表(grade 等级/losal此等级的最低/hisal此等级的最高)create table salgrade ( grade numeric, losal numeric, hisal numeric);insert into salgrade values (1, 700, 1200);insert into salgrade values (2, 1201, 1400);insert into salgrade values (3, 1401, 2000);insert into salgrade values (4, 2001, 3000);insert into salgrade values (5, 3001, 9999);--员工表emp员工表(empno员工号/ename员工姓名/job工作/mgr上级编号/hiredate受雇日期/sal薪金/comm佣金/deptno部门编号)工资 ＝ 薪金 ＋ 佣金1.表自己跟自己连接create table emp ( empno numeric(4) not null, ename varchar(10), job varchar(9), mgr numeric(4), hiredate datetime, sal numeric(7, 2), comm numeric(7, 2), deptno numeric(2));insert into emp values (7369, &apos;SMITH&apos;, &apos;CLERK&apos;, 7902, &apos;1980-12-17&apos;, 800, null, 20);insert into emp values (7499, &apos;ALLEN&apos;, &apos;SALESMAN&apos;, 7698, &apos;1981-02-20&apos;, 1600, 300, 30);insert into emp values (7521, &apos;WARD&apos;, &apos;SALESMAN&apos;, 7698, &apos;1981-02-22&apos;, 1250, 500, 30);insert into emp values (7566, &apos;JONES&apos;, &apos;MANAGER&apos;, 7839, &apos;1981-04-02&apos;, 2975, null, 20);insert into emp values (7654, &apos;MARTIN&apos;, &apos;SALESMAN&apos;, 7698, &apos;1981-09-28&apos;, 1250, 1400, 30);insert into emp values (7698, &apos;BLAKE&apos;, &apos;MANAGER&apos;, 7839, &apos;1981-05-01&apos;, 2850, null, 30);insert into emp values (7782, &apos;CLARK&apos;, &apos;MANAGER&apos;, 7839, &apos;1981-06-09&apos;, 2450, null, 10);insert into emp values (7788, &apos;SCOTT&apos;, &apos;ANALYST&apos;, 7566, &apos;1982-12-09&apos;, 3000, null, 20);insert into emp values (7839, &apos;KING&apos;, &apos;PRESIDENT&apos;, null, &apos;1981-11-17&apos;, 5000, null, 10);insert into emp values (7844, &apos;TURNER&apos;, &apos;SALESMAN&apos;, 7698, &apos;1981-09-08&apos;, 1500, 0, 30);insert into emp values (7876, &apos;ADAMS&apos;, &apos;CLERK&apos;, 7788, &apos;1983-01-12&apos;, 1100, null, 20);insert into emp values (7900, &apos;JAMES&apos;, &apos;CLERK&apos;, 7698, &apos;1981-12-03&apos;, 950, null, 30);insert into emp values (7902, &apos;FORD&apos;, &apos;ANALYST&apos;, 7566, &apos;1981-12-03&apos;, 3000, null, 20);insert into emp values (7934, &apos;MILLER&apos;, &apos;CLERK&apos;, 7782, &apos;1982-01-23&apos;, 1300, null, 10); 聚合函数：1sum() max() min() count() 分组函数：1group by .... having .... 列题：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#1.求员工表 所有人的薪水和 as salsum 别名selectsum(sal) as salsumfrom emp;#2.求每个部门的所有人的薪水和selectdeptno,sum(sal) as salsumfrom empgroup by deptno;#总结: group by 后面出现多少个字段，那么select 后面也要一模一样#每/各 是为分组字段 #3.求每个部门的每个岗位的所有人的薪水和selectdeptno,job,sum(sal) as salsumfrom empgroup by deptno,job;#4.求每个部门的每个岗位的所有人的薪水和，及人数selectdeptno,job,sum(sal) as salsum,count(deptno) as pnumfrom empgroup by deptno,job;group by deptno --》3group by deptno , job #5.求薪水和大于1500的哪些部门 ==》 每个部门的薪水和 ==》 哪些薪水和大于1500的部门selectdeptno,sum(sal) as salsumfrom empgroup by deptno having sum(sal)&gt;1500;#子查询select t.* from (selectdeptno,sum(sal) as salsumfrom empgroup by deptno) as twhere t.salsum &gt; 1500; 关联 left join,right join,inner join123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172重新创建表：drop table testa;create table testa(aid int,aname varchar(100),address varchar(100));create table testb(bid int,bname varchar(100),age int);create table testsal(cid int,sal int);delete from testsal;insert into testsal values(1,100);insert into testsal values(2,300);insert into testsal values(4,700);insert into testsal values(8,1300);insert into testsal values(9,3300);select * from testsal;insert into testa values(1,&apos;xiao1&apos;,&apos;SH1&apos;);insert into testa values(2,&apos;xiao2&apos;,&apos;SH1&apos;);insert into testa values(3,&apos;xiao3&apos;,null);insert into testa values(4,&apos;xiao4&apos;,&apos;SH2&apos;);insert into testa values(5,&apos;xiao5&apos;,&apos;SH2&apos;);insert into testb values(1,&apos;xiao1&apos;,10);insert into testb values(2,&apos;xiao2&apos;,20);insert into testb values(3,&apos;xiao3&apos;,30);insert into testb values(4,&apos;xiao4&apos;,40);insert into testb values(4,&apos;xiao44&apos;,440);insert into testb values(7,&apos;xiao7&apos;,70);insert into testb values(8,&apos;xiao8&apos;,80);insert into testb values(9,&apos;xiao9&apos;,90);## left join： select a.*,b.*from testa a left join testb b on a.aid=b.bid a &lt;-- b #以左表为主，左表数据最全，右表来匹配的，匹配多少算多少 aid aname bid bname age 1 xiao1 1 xiao1 10 2 xiao2 2 xiao2 20 3 xiao3 3 xiao3 30 4 xiao4 4 xiao4 40 5 xiao5 null null null ## right join： select a.*,b.*from testa a right join testb b on a.aid=b.bid #以右表为主，右表数据最全，左表来匹配的，匹配多少算多少 a --&gt; b 1 xiao1 1 xiao1 10 2 xiao2 2 xiao2 20 3 xiao3 3 xiao3 30 4 xiao4 4 xiao4 40 7 xiao7 70 8 xiao8 80 9 xiao9 90## inner join select a.*,b.*from testa a inner join testb b on a.aid=b.bid #等值连接 两边都要存在 1 xiao1 1 xiao1 10 2 xiao2 2 xiao2 20 3 xiao3 3 xiao3 30 4 xiao4 4 xiao4 40## 笛卡尔集 select a.*,b.*from testa a, testb b;## 等值连接 select a.*,b.*from testa a, testb b where a.aid = b.bid; jion相关联的题：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#哪些人 有薪水的有年龄的有地址select s.*,b.*,a.*from testsal sleft join testb b on s.cid =b.bidleft join testa a on s.cid =a.aidwhere s.sal is not null and b.age is not null and a.address is not null;select s.*,b.*,a.*from testsal sleft join testb b on s.cid =b.bidleft join testa a on b.bid =a.aidwhere s.sal is not null and b.age is not null and a.address is not null;select s.*,b.*,a.*from testsal sleft join testb b on s.cid =b.bidright join testa a on b.bid =a.aid;#哪些人 有薪水的 有年龄的有地址select s.*,t.*from testsal sleft join (select b.*,a.*from testb b right join testa a on b.bid =a.aid) t on s.cid = t.aidwhere s.sal is not null and t.age is not null and t.address is not null;select s.*,t.*from testsal sinner join (select b.*,a.*from testb b inner join testa a on b.bid =a.aid) t on s.cid = t.aid;]]></content>
      <categories>
        <category>mysql数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql的基础语句]]></title>
    <url>%2F2019%2F04%2F05%2Fmysql%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[mysql的基础语句： 1.如何创建一个新的DB和用户1234567create database DB名字(创建一个新的DB)grant all privileges on DB名字.* to 用户名字@&apos;%&apos; identified by &apos;密码&apos;(创建一个新用户并赋予它对这个DB的全部权限， %:ip地址，表示该用户允许任意ip地址来访问当前数据库 %也可以换成任意ip，比如：127.0.0.1：表示当前机器 也可以是网段，比如：192.168.137.1~255 ) 操作完成后记刷新，养成良好的习惯：flush privileges; 视野开阔：1java函数启动也可以不需要 main启动类，详情查看：https://github.com/dbeaver/dbeaver/issues/2671 如何查看mysql的链接数 适当kill：123show processlist;kill id找到哪个process 卡，导致夯住 锁死 --&gt;和开发 和其他小伙伴确认清楚 再kill 字段类型：12345678910111213数值类型： int 整数 float 单精度 double 双精度 decimal 小数值：一般用于金额字段 字符串类型 char 定长字符串 0-255字节 varchar 变长字符串 0-65535字节 日期和时间类型 date 日期 YYYY-MM-DD time 时间 HH：MM：SS datetime timestamp 数据库类型分为：123DDL：create dropDML：inisert update delete selectDCL：grant 创建表：123create table 表名每个表中必须只能有一个主键，但是可以有1个或者两个字段组成联合主键也可以是由两个字段组成自增长 id自增长是非业务系统的唯一标识 约束：1234primary key = unique+not null唯一约束 unique非空约束 not null默认约束 创建表：12345678910111213#表 table （创建一张名字rzdata的表）create table rzdata(id int AUTO_INCREMENT primary key, （id自增长 主键）stu_num int,stu_name varchar(100),stu_age int,createtime timestamp default current_timestamp,createuser varchar(100),updatetime timestamp default current_timestamp on update current_timestamp,updateuser varchar(100)); 向表中插入数据：12345678insert into 数据表怕(列名)values(数据) 语法列如：(一下两种方式都可以)insert into ruozedata.rzdata(stu_num,stu_name,stu_age,createuser,updateuser) values(110,&apos;jepson&apos;,18,&apos;j&apos;,&apos;r&apos;);insert into ruozedata.rzdatavalues(10,110,&apos;jepson&apos;,18,&apos;2019-01-27 12:00:00&apos;,&apos;j&apos;,&apos;2019-01-27 12:00:00&apos;,&apos;r&apos;); 更改表中数据：1234update 数据表 set 数据 where 条件列如：update ruozedata.rzdata set stu_age=22 ;（如果不加条件表示表中 age全部变成22）update ruozedata.rzdata set stu_age=26 where id=1;（表示 id为1的 年龄改成26） 删除表中数据：12delete from ruozedata.rzdata; （表示删除表中所有数据）delete from ruozedata.rzdata where stu_num=110;（删除stu_num 为110的这一条数据） 查询表中数据：12345select * from ruozedata.rzdata;（表示查询表中所有数据）select id,stu_name from ruozedata.rzdata;（表示查看表中id，和stu_name数据）select id,stu_name from ruozedata.rzdata where stu_age=18;（表示查看stu_age=18这一条数据中的id和 stu_name的数据）select * from ruozedata.rzdata where stu_age=18;#假设你只想取 stu_name，stu_age两列 ，但是你的SQL是* 所有字段 这样会有额外的开销 生产中建字段注意事项：1234#createtime cretime ctime cre_time create_time#orderno order_no ordernum orderid#两张表 order_no=orderid （这就不符合规范了，建字段前要先查看别人是怎么创建字段的，符合规矩）#3.字段名称不允许中文 中文的汉语拼音 建字段 条件查询：123where and or列如：select * from ruozedata.rzdata where stu_age=18 and stu_name=&apos;jepson&apos;; select * from ruozedata.rzdata where stu_age=24 or stu_name=&apos;jepson&apos;; 模糊查询：12345like列如：select * from ruozedata.rzdata where stu_name like &apos;%n%&apos;; select * from ruozedata.rzdata where stu_name like &apos;j%&apos;; select * from ruozedata.rzdata where stu_name like &apos;%u&apos;; select * from ruozedata.rzdata where stu_name like &apos;__s%&apos;; #占位符_ 第三个字母s 排序查询：12345order byselect * from ruozedata.rzdata order by stu_age asc; (asc表示升序）select * from ruozedata.rzdata order by stu_age desc;（desc表示降序）按年龄升序 学号降序select * from ruozedata.rzdata order by stu_age asc,stu_num desc; 限制行数查询：1select * from ruozedata.rzdata limit 2; （限制显示两行）]]></content>
  </entry>
  <entry>
    <title><![CDATA[mysql二进制部署]]></title>
    <url>%2F2019%2F04%2F05%2Fmysql%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[mysql环境搭建 1.Download and Check MD5[root@sht-sgmhadoopnn-01 ~]# cd /usr/local mysql-5.6.23-linux-glibc2.5-x86_64.tar.gz选择rz上传 [root@sht-sgmhadoopnn-01 local]# cat mysql-5.6.23-linux-glibc2.5-x86_64.tar.gz.md561affe944eff55fcf51b31e67f25dc10 mysql-5.6.23-linux-glibc2.5-x86_64.tar.gz [root@sht-sgmhadoopnn-01 local]# md5sum mysql-5.6.23-linux-glibc2.5-x86_64.tar.gz61affe944eff55fcf51b31e67f25dc10 mysql-5.6.23-linux-glibc2.5-x86_64.tar.gz 2.Check isnot install[root@sht-sgmhadoopnn-01 local]# ps -ef|grep mysqldroot 2493 2423 0 19:48 pts/3 00:00:00 grep mysqld[root@sht-sgmhadoopnn-01 local]# rpm -qa |grep -i mysql 3.tar and mv[root@sht-sgmhadoopnn-01 local]# tar xzvf mysql-5.6.23-linux-glibc2.5-x86_64.tar.gz[root@sht-sgmhadoopnn-01 local]# mv mysql-5.6.23-linux-glibc2.5-x86_64 mysql 4.Create group and user[root@sht-sgmhadoopnn-01 local]# groupadd -g 101 dba[root@sht-sgmhadoopnn-01 local]# useradd -u 514 -g dba -G root -d /usr/local/mysql mysqladmin useradd: warning: the home directory already exists.（之前创建过mysqladmin用户，将其删除掉就好）Not copying any file from skel directory into it.（需要将/etc/skel中的 .bash~ 文件复制到/usr/local/mysql ，目录下）[root@hadoop001 local]# [root@sht-sgmhadoopnn-01 local]# id mysqladminuid=514(mysqladmin) gid=101(dba) groups=101(dba),0(root)[root@sht-sgmhadoopnn-01 local]# passwd mysqladminChanging password for user mysqladmin.New UNIX password:BAD PASSWORD: it is too simplistic/systematicRetype new UNIX password:passwd: all authentication tokens updated successfully.[root@sht-sgmhadoopnn-01 local]# if user mysqladmin is existing,please execute the following command of usermod. ##[root@sht-sgmhadoopnn-01 local]# usermod -u 514 -g dba -G root -d /usr/local/mysql mysqladmin # copy 环境变量配置文件至mysqladmin用户的home目录中,为了以下步骤配置个人环境变量 [root@sht-sgmhadoopnn-01 local]# cp /etc/skel/.* /usr/local/mysqlcp: omitting directory /etc/skel/.&#39; cp: omitting directory/etc/skel/..’cp: omitting directory `/etc/skel/.mozilla’ 对于一个系统想要运行 肯定需要配置文件 my.cnf 5.Create /etc/my.cnf (640权限)#defualt start: /etc/my.cnf-&gt;/etc/mysql/my.cnf-&gt;SYSCONFDIR/my.cnf-&gt;$MYSQL_HOME/my.cnf-&gt; –defaults-extra-file-&gt;~/my.cnf [root@sht-sgmhadoopnn-01 mysql]# cd /etc/[root@sht-sgmhadoopnn-01 etc]# touch my.cnf[root@sht-sgmhadoopnn-01 etc]# vi my.cnf [client]port = 3306socket = /usr/local/mysql/data/mysql.sock [mysqld]port = 3306socket = /usr/local/mysql/data/mysql.sock skip-external-lockingkey_buffer_size = 256Msort_buffer_size = 2Mread_buffer_size = 2Mread_rnd_buffer_size = 4Mquery_cache_size= 32Mmax_allowed_packet = 16Mmyisam_sort_buffer_size=128Mtmp_table_size=32M table_open_cache = 512thread_cache_size = 8wait_timeout = 86400interactive_timeout = 86400max_connections = 600 Try number of CPU’s*2 for thread_concurrency thread_concurrency = 32 #isolation level and default enginedefault-storage-engine = INNODBtransaction-isolation = READ-COMMITTED server-id = 1basedir = /usr/local/mysqldatadir = /usr/local/mysql/datapid-file = /usr/local/mysql/data/hostname.pid #open performance schemalog-warningssysdate-is-now binlog_format = MIXEDlog_bin_trust_function_creators=1log-error = /usr/local/mysql/data/hostname.errlog-bin=/usr/local/mysql/arch/mysql-bin #other logs #general_log =1 #general_log_file = /usr/local/mysql/data/general_log.err #slow_query_log=1 #slow_query_log_file=/usr/local/mysql/data/slow_log.err #for replication slave #log-slave-updates #sync_binlog = 1 #for innodb optionsinnodb_data_home_dir = /usr/local/mysql/data/innodb_data_file_path = ibdata1:500M:autoextendinnodb_log_group_home_dir = /usr/local/mysql/archinnodb_log_files_in_group = 2innodb_log_file_size = 200M #生产上 机械硬盘 sata盘 5000r 7200 10000 15000 ==&gt; ssd 生产 innodb_buffer_pool_size 调大 8G innodb_buffer_pool_size = 1024Minnodb_additional_mem_pool_size = 50Minnodb_log_buffer_size = 16M innodb_lock_wait_timeout = 100 #innodb_thread_concurrency = 0innodb_flush_log_at_trx_commit = 1innodb_locks_unsafe_for_binlog=1 #innodb io features: add for mysql5.5.8performance_schemainnodb_read_io_threads=4innodb-write-io-threads=4innodb-io-capacity=200 #purge threads change default(0) to 1 for purgeinnodb_purge_threads=1innodb_use_native_aio=on #case-sensitive file names and separate tablespaceinnodb_file_per_table = 1lower_case_table_names=1 [mysqldump]quickmax_allowed_packet = 16M [mysql]no-auto-rehash [mysqlhotcopy]interactive-timeout [myisamchk]key_buffer_size = 256Msort_buffer_size = 256Mread_buffer = 2Mwrite_buffer = 2M 6.chown and chmod privileges and try first install[root@sht-sgmhadoopnn-01 local]# chown mysqladmin:dba /etc/my.cnf[root@sht-sgmhadoopnn-01 local]# chmod 640 /etc/my.cnf[root@sht-sgmhadoopnn-01 etc]# ll my.cnf-rw-r—– 1 mysqladmin dba 2201 Aug 25 23:09 my.cnf [root@sht-sgmhadoopnn-01 local]# chown -R mysqladmin:dba /usr/local/mysql[root@sht-sgmhadoopnn-01 local]# chmod -R 755 /usr/local/mysql[root@sht-sgmhadoopnn-01 local]# su - mysqladmin[mysqladmin@sht-sgmhadoopnn-01 ~]$ pwd/usr/local/mysql 创建arch目录 存储binlog 归档日志 生产中:mysql–maxwell–kafka–ss–hbase 实时 mcp[mysqladmin@sht-sgmhadoopnn-01 ~]$ mkdir arch [mysqladmin@sht-sgmhadoopnn-01 ~]$ scripts/mysql_install_dbInstalling MySQL system tables…./bin/mysqld:error while loading shared libraries: libaio.so.1: cannot open shared object file:No such file or directory #缺少libaio.so 包 ###see version[root@sht-sgmhadoopnn-01 local]# cat /proc/versionLinux version 2.6.18-164.11.1.el5 (mockbuild@builder10.centos.org) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-46)) #1 SMP Wed Jan 20 07:32:21 EST 2010[root@sht-sgmhadoopnn-01 local]# rpm -qa |grep gcclibgcc-4.1.2-46.el5_4.2libgcc-4.1.2-46.el5_4.2[root@sht-sgmhadoopnn-01 local]# yum -y install libaio 7.Again install[mysqladmin@sht-sgmhadoopnn-01 ~]$ scripts/mysql_install_db \–user=mysqladmin \–basedir=/usr/local/mysql \–datadir=/usr/local/mysql/data 查看data/hostname.err文件 仔细错误 8.Configure mysql service and boot auto start[root@sht-sgmhadoopnn-01 ~]# cd /usr/local/mysql #将服务文件拷贝到init.d下，并重命名为mysql[root@sht-sgmhadoopnn-01 mysql]# cp support-files/mysql.server /etc/rc.d/init.d/mysql #赋予可执行权限[root@sht-sgmhadoopnn-01 mysql]# chmod +x /etc/rc.d/init.d/mysql #删除服务[root@sht-sgmhadoopnn-01 mysql]# chkconfig –del mysql #添加服务[root@sht-sgmhadoopnn-01 mysql]# chkconfig –add mysql[root@sht-sgmhadoopnn-01 mysql]# chkconfig –level 345 mysql on[root@sht-sgmhadoopnn-01 mysql]# vi /etc/rc.local #!/bin/sh# This script will be executed after all the other init scripts. You can put your own initialization stuff in here if you don’t want to do the full Sys V style init stuff. touch /var/lock/subsys/local su - mysqladmin -c “/etc/init.d/mysql start –federated” 9.Start mysql and to view process and listening[root@sht-sgmhadoopnn-01 mysql]# su - mysqladmin[mysqladmin@sht-sgmhadoopnn-01 ~]$ pwd/usr/local/mysql[mysqladmin@sht-sgmhadoopnn-01 ~]$ rm -rf my.cnf [mysqladmin@hadoop001 ~]$ service mysql startStarting MySQL. [ OK ][mysqladmin@hadoop001 ~]$[mysqladmin@hadoop001 ~]$ service mysql statusMySQL running (3625) [ OK ][mysqladmin@hadoop001 ~]$ [mysqladmin@sht-sgmhadoopnn-01 ~]$ mysqld_safe &amp;[1] 11802[mysqladmin@sht-sgmhadoopnn-01 ~]$ 150825 22:53:38 mysqld_safe Logging to ‘/usr/local/mysql/data/hostname.err’.150825 22:53:38 mysqld_safe Starting mysqld daemon with databases from /usr/local/mysql/data/150825 22:53:39 mysqld_safe mysqld from pid file /usr/local/mysql/data/hostname.pid ended[mysqladmin@sht-sgmhadoopnn-01 ~]$ [mysqladmin@sht-sgmhadoopnn-01 ~]$ ps -ef|grep mysqld514 6247 6219 0 17:30 pts/1 00:00:00 /bin/sh /usr/local/mysql/bin/mysqld_safe514 6902 6247 2 17:30 pts/1 00:00:01 /usr/local/mysql/bin/mysqld –basedir=/usr/local/mysql –datadir=/usr/local/mysql/data –plugin-dir=/usr/local/mysql/lib/plugin –log-error=/usr/local/mysql/data/hostname.err –pid-file=/usr/local/mysql/data/hostname.pid –socket=/usr/local/mysql/data/mysql.sock –port=3306514 6927 6219 0 17:31 pts/1 00:00:00 grep mysqld [mysqladmin@sht-sgmhadoopnn-01 ~]$ netstat -tulnp | grep mysql(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)tcp 0 0 :::3306 :::* LISTEN 11541/mysqld [root@sht-sgmhadoopnn-01 local]# service mysql statusMySQL running (21507) [ OK ] 部署完成了创建一个root用户 密码为空​ 一个空用户 密码为空 生产上密码肯定不为空 比如123456bin/mysql -uroot -p -h127.0.0.1 一回城就让你输入密码 这是安全的 不会被history记录 bin/mysql -uroot -p123456 -h127.0.0.1 一回城就进数据库 这是不安全的 会被history记录bin/mysql -u root -p 123456 -h 127.0.0.1 -P3306 10.Login mysql[mysqladmin@sht-sgmhadoopnn-01 ~]$ mysqlWelcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 1Server version: 5.6.23-log MySQL Community Server (GPL) Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners. Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement. mysql&gt; show databases;+——————–+| Database |+——————–+| information_schema || mysql || performance_schema || test |+——————–+4 rows in set (0.00 sec) 11.Update password and Purge usermysql&gt; use mysqlDatabase changed mysql&gt; update user set password=password(‘123456’) where user=’root’; Query OK, 4 rows affected (0.00 sec)Rows matched: 4 Changed: 4 Warnings: 0 mysql&gt; select host,user,password from user;+—————-+——+——————————————-+| host | user | password |+—————-+——+——————————————-+| localhost | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || sht-sgmhadoopnn-01 | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || 127.0.0.1 | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || ::1 | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || localhost | | || sht-sgmhadoopnn-01 | | |+—————-+——+——————————————-+6 rows in set (0.00 sec) mysql&gt; delete from user where user=’’;mysql&gt; select host,user,password from user;+—————-+——+——————————————-+| host | user | password |+—————-+——+——————————————-+| localhost | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || sht-sgmhadoopnn-01 | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || 127.0.0.1 | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F || ::1 | root | 6340BE3C15D246B0D74BAF3F135915ED19E0069F |+—————-+——+——————————————-+4 rows in set (0.00 sec) #针对用户 权限的操作语句 养成习惯 都最后一步执行刷新权限mysql&gt; flush privileges; 12.Configure .bash_profile[mysqladmin@sht-sgmhadoopnn-01 ~]$ cat .bash_profile .bash_profile Get the aliases and functions if [ -f ~/.bashrc ]; then​ . ~/.bashrcfi User specific environment and startup programs MYSQL_HOME=/usr/local/mysqlPATH=${MYSQL_HOME}/bin:$PATH PS1=uname -n“:”‘$USER’”:”‘$PWD’”:&gt;”; export PS1 这行是设置显示目录，将自己的家目录显示出来。 配置环境变量时，最前面加上 export，将最新的要部署的变量“放在前面” PATH=$PATH:$HOME/binexport PATH $PATH=/usr/bin:/usr/local/bin:/usr/local/mysql/binmysql5.5 mysql 假设 /usr/local/bin/mysqlmysql5.6 mysql Error1: File ‘/usr/local/mysql/arch/mysql-bin.index’ not found (Errcode: 13)test2.localdomain:mysqladmin:/usr/local/mysql/arch:&gt;chmod 755 test2.localdomain:mysqladmin:/usr/local/mysql/arch:&gt;chown –R mysqladmin:dba tidb如果安装失败，rm -rf data/​ rm -rf arch/]]></content>
  </entry>
  <entry>
    <title><![CDATA[jdk1.8安装]]></title>
    <url>%2F2019%2F04%2F05%2Fjdk1.8%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[JDK的安装&amp;&amp;全局环境变量 123456789101112131415jdk 文件必须放到: /usr/ java目录下，否则后期安装上CDH之后会出现一些坑。解压jdk的 tar包: tar -xzvf jdk-8u45-linux-x64.gz注意: 解压之后，修改jdk文件夹的权限 chown -R root:root jdk1.8.0_45 文件夹和文件夹里面的文件夹和文件 chown -R root:root jdk1.8.0_45/*配置环境变量： vi /etc/profile #add JAVA_HOME export JAVA_HOME=/usr/java/jdk1.8.0_45 export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH 生效： source /etc/profile查看是否成功： java -version]]></content>
  </entry>
  <entry>
    <title><![CDATA[Linux命令进阶]]></title>
    <url>%2F2019%2F04%2F04%2FLinux%E5%91%BD%E4%BB%A4%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[Linux进阶命令： 查看用户命令： 12ll /usr/sbin/user*列如:(usermod,userdel,useradd) 查看用户组命令： 12ll /usr/sbin/group*列如:(groupmod,groupdel,groupadd) 添加和删除用户： 123456789useradd ruoze (创建一个ruoze用户，并且自动创建一个ruoze用户组)通过 id ruoze 命令查看信息：uid=501(ruoze) gid=501(ruoze) groups=501(ruoze) uid:(用户) gid:(主组) groups:(所有组)查看用户创建记录：cat /etc/passwd查看组创建记录： cat /etc/groupuserdel ruoze (删除ruoze用户)如果删除用户之后，/etc/passwd中没有记录 /etc/group中没有记录(因为ruoze组中只有一个ruoze用户，当删掉ruoze用户，该组经过校验发现只有自己，就会删除该组，但是家目录中用户还在，删除后再创建会提示用户存在，不过用户一样会创建出来) 将用户添加到用户组： 12usermod -a -G 用户组 用户usermod -g 用户组 用户 (将用户组改为主组) 设置密码： 1passwd 用户 怎样切换用户： 123su - 用户su 用户- : 代表切用户以后，进入该用户的家目录且执行 环境变量文件 退出当前用户： 1exit 普通用户如何临时获取root最大权限： 1234vi /etc/sudoers修改配置文件：(列如：root ALL=(ALL) ALL 用户 ALL=(root) NOPASSWD:ALL) ：wq! 强制退出后, 输入sudo ls -l /root 命令，查看信息 管道符和过滤： 123| (管道符)grep (过滤)用法：(列如：cat /home | grep jepson 在查看home下所有用户之后自动将jepson筛选出来) 怎样查看进程： 12345ps -ef | grep tail显示出的信息：root 2425 1779 0 20:39 pts/0 00:00:00 tail -f install.log.syslog2425：进程pid1779：父idps -ef | grep &apos;log&apos; (模糊查询) 杀死进程： 12345kill -9 进程的pidkill -9 pid pid(并行杀)如果我只想杀死包含log字符的所有进程:(kill -9 $(pgrep -f log))(提醒: kill前确认清楚该进程是否该杀 不要杀错 )(linux操作: 遇到rm kill高危命令 需确认再确认) 查看端口号： 1netstat -nlp | grep pid或者进程名字 题目： 123456老板说去A服务器 login,打开xxx软件的web界面？ip+portps - ef | grep xxx --&gt; pid --&gt; netstat -nlp | grep pid等价于netstat -nlp | grep xxx(0.0.0.0:22 或者 ::: 80都表示的是本机ip，代表当前ip对外提供访问 如果：127.0.0.1:80 或者 localhost:80 只针对内部当前机器访问 ) 如果出现链接拒绝错误 Connection refused应该怎样做： 123window : 控制面板 卸载程序 打开或关闭windows功能 选中Telnet客户端 部署 通过 cmd ping一下ip，然后 telnet ip port，如果不行，很有可能是ip只针对内部当前机器访问 linux : yum install telnet.x86_64 搜索命令： 123456列如搜索xxx软件 history | grep xxx (通过查看历史命令记录来查找xxx软件) ps - ef | grep xxx (通过查看进程搜索xxx软件) find / -name &apos;*log*&apos; (全局 根目录模糊查询) find ./ -name &apos;*log*&apos; (当前目录开始 模糊查询) * (代表模糊查询) Linux安装和卸载软件 rpm 123456yum search 软件名字: (搜索软件)yum install -y 软件名字: (下载软件)yun remove 软件名字: (卸载软件)rpm -qa | grep 软件名字: (搜索软件)rpm -e 软件名字: (卸载软件，卸载过程中可能会出现失败的情况，由于该软件包依赖于其他rpm) rpm -e --nodeps 软件名字: (强制卸载软件) 查找命令： 1which xxx (命令都是从$PATH中查找) mv和cp哪个速度更快： 1当在同一系统中时mv的速度会快于cp的速度 文本编辑命令： 12vi xxx.log: (编辑xxx.log文件)在生产中使用vi修改配置文件，别人的服务文件时应先要复制一份，再进行修改 命令行模式常见快捷键： 123456dd: (删除当前光标所在行)dG: (删除当前光标所在行下的所有行包括光标所在行)ndd: (删除光标所在行下的n行包括光标所在行)gg: (光标跳转到第一行第一个字母)G: (光标跳转到最后一行的第一个字)shift+$:(行尾) 生产场景下如果一个文件内容比较多，想清空该如何做： 123gg --&gt; dG: (第一种方式)echo &quot;&quot; &gt;文件: (为清空，文件中还存留一个字节，要注意)cat /dev/null &gt;文件: (真正的清空) 当一个文件内容非常多，比如系统文件，如何快速定位到你想搜索的关键词： 123在尾行模式下输入 /关键词set nu: (表格化，开头有行号)set nonu: (取消表格化) 权限： 12345678910111213141516171819202122232425drwxr-xr-x. 3 root root 4096 Jan 19 20:42 1drwxr-xr-x. 2 root root 4096 Jan 19 20:44 4-rw-r--r--. 1 root root 10033 Jan 19 20:57 install.log.syslog-rw-r--r--. 1 root root 49566 Jan 23 21:37 jepson.log-rw-r--r--. 1 root root 1 Jan 23 21:30 ruoze.log.1d rwxr-xr-x第一个: d:(代表文件夹) -:(文件) l:(连接)r: 读 4w: 写 2x: 执行shell脚本 1列如：rwxr-xr-x 755 rwxr--r-- 744 r--r--r-- 444 r-xrwxrw- 576rwxr-xr-x :分为三组 第一组:rwx 7 代表文件和文件夹所属用户的权限: 读写执行 第二组:r-x 5 代表文件和文件夹所属的用户组的权限: 读执行 第三组:r-x 5 代表其他组的所有用户对这个文件或者文件夹的权限: 读执行root root第三列:所属用户第四列:所属用户组第五列字节(文件大小)ll -h:(只能查看文件大小)du -sh:(即可以查看文件大小，也可以查看文件夹大小)第六列:文件时间 修改用户权限命令： 1234chmod -R 777 目录:(修改用户权限)chown -R 用户:所属用户组 目录:(修改所属用户和用户组，来达到修改权限的作用)-R表示递归，文件夹下所有的都会被修改整套Linux命令中，只有这两个命令用到的是大R，其它都是小r 软连接： 12ln -s 原始路径 目标路径注意:(删除目标路径，原路径不会被删除) 上传和下载： 123yum install -y lrzsz (下载rpm)rz: window --&gt; linuxrs: linux --&gt; window 系统命令： 12topload average:0.00,0.00,0.00( 生产服务器 不要超过10经验值) 查看内存： 1free -m 查看硬盘： 1df -h 压缩解压： 123456zip:(压缩) unzip:(解压)列如: zip -r 文件夹.zip 文件夹/*(压缩文件夹以及文件夹下所有内容) unzip 文件夹.ziptar -czvf(压缩) tar -xzvf(解压)列如:tar -czvf 文件夹.tar 文件夹/* tar -xzvf 文件夹.tar 作业调度： 1234567891011121314151617181920212223crontab -e:(edit user's crontab)编辑crontab -l:(list user's crontab)查看[root@hadoop001 ~]# crontab -e * * * * * /root/test.sh &gt;&gt; /root/test.log格式:* * * * * *第1个: 分第2个: 小时第3个: 日第4个: 月第5个: 周*代表 每每10秒？编写脚本:[root@hadoop001 ~]# vi test.sh( #!/bin/bashfor((i=1;i&lt;=6;i++));do date sleep 10sdoneexit ) 后台执行命令 不交互： 12345 ./test.sh &amp; nohup ./test.sh &amp;生产: ==&gt; nohup ./test.sh &amp; nohup ./test.sh &gt; /root/test.log 2&gt;&amp;1 &amp; # 详细解释 https://blog.csdn.net/ggxiaobai/article/details/53507530]]></content>
      <tags>
        <tag>大数据</tag>
        <tag>Linux系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux一些常用命令]]></title>
    <url>%2F2019%2F04%2F04%2FLinux%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Linux基本命令： 查看IP: 12ifconfigipconfig(windows) 关闭防护墙： 12service ipconfig stopchkconfig off 查看当前光标所在路径： 1pwd Linux系统中根目录是指： 1/ 有关于cd相关命令： 1234cd 或者 cd~ (切换到根目录)cd - (切换到上次目录)cd ../ (切换到上层目录)cd ../ ../ (切换到上两层目录) 目录路径： 12绝对路径 (例如： /home/etc /为开头)相对路径 (当前目录开始，没有/为开头) 清空屏幕： 1clear 有关于ll ls 相关知识点： 1234567ls (查看当前目录下所有文件和文件夹)ll (查看当前目录下所有文件和文件夹详细信息)ls -l == ll (别名)ls -l -a == ls -la (查看所有隐藏文件和文件夹)-a 表示查看隐藏的文件和文件夹 (以.开头的文件或者文件夹)ll -h (查看文件大小)ll -rt (文件或者文件夹按时间顺序排序) 创建目录： 123mkdir (列如：mkdir ruozedate/)mkdir -p 4/5/6 (创建级联目录)mkdir 4 5 6 (创建并行目录) 移动命令： 12345mv 原路径文件夹/文件 目标端的路径文件夹/文件列如 (mv instail.log ruozedate/)也可以在移动的过程中重命名列如 (mv instail.log ruozedate/instail.log2019)注意 (移动只有一份) 复制命令： 1234cp 原路径文件夹/文件 目标路径文件夹/文件 列如 (cp instail.log ruozedate/instail.log2019&quot;复制的过程中可以重新命名&quot;)如果复制的是文件夹的话 需要加 -r 列如 (cp -r d66 ruozedate/d6&quot;复制的过程可以重命名&quot;) 查看帮助命令： 1列如: ls --help 查看文件内容： 123cat (文件内容一下子全部显示)more (文件内容分页显示，按空格往下查看，不能往回查看，按q退出)less（文件内容分页显示，按下箭头往下查看，上箭头往回查看，按q退出） 实时查看： 12tail -f xxx.logtail -F xxx.log F=f+retry 别名： 12345ls -l==ll (ll就是别名)alias rzcd=&apos;cd /home/jepson/&apos; (在当前窗口输入 rzcd命令 就可以进入jespon下，注意：当前 session生效)永久生效该怎么配置： (1)全局环境变量文件： vi /etc/profile (在profile中输入 alias rzcd=&apos;cd /home/jepson/&apos; )，wq退出，输入 source /etc/profile，这样就可以永久生效了。 (2)个人环境变量文件： vi .bash_profile (在profile中输入 alias rzcd=&apos;cd /home/jepson/&apos; ),退出，输入source .bash_profile或者 . .bash_profile,这样也可以永久生效。 创建空文件： 1touch (列如：touch instail.log) 删除命令： 1234rm xxx.log (删除文件)rm -r xxx (删除文件夹)rm -f xxx.log (强制删除)注意：(-r 只代表文件夹 -f 表示强制) 设置变量: 12设置 key=value (前后不能有空格) 使用 $&#123;key&#125;列如：设置path=&quot;123&quot; 之后echo $&#123;path&#125;,就会输出&quot;123&quot;]]></content>
  </entry>
</search>
